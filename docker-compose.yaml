services:
  app:
    container_name: app
    build:
      context: ./back
      dockerfile: Dockerfile
    environment:
      - REDIS_URL=redis://redis:6379
    volumes:
      - ./back/.env:/app/.env
      - ./app-data:/app/data
    expose:
      - "3000"
    depends_on:
      - redis
    networks:
      - chat32

  redis:
    image: redis:7
    container_name: redis
    volumes:
      - ./redis:/data
    networks:
      - chat32

  nginx:
    image: nginx:latest
    container_name: nginx
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/data:/etc/letsencrypt
      - ./nginx/www/certbot:/var/www/certbot

    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - app
    networks:
      - chat32

  certbot:
    image: certbot/certbot
    container_name: certbot
    volumes:
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./nginx/data:/etc/letsencrypt
      - ./nginx/www/certbot:/var/www/certbot

    entrypoint: ""
    command: >
      sh -c "certbot certonly --webroot -w /var/www/certbot
      --email renatoruis@gmail.com --agree-tos --no-eff-email
      -d api.chat32.space"

networks:
  chat32:
    driver: bridge
